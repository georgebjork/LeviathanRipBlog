@rendermode @(new InteractiveServerRenderMode(prerender:false))
@page "/campaigns"
@using LeviathanRipBlog.Data.Repositories
@using Humanizer
@using LeviathanRipBlog.Data.Models

@inject ILogger<MyCampaigns> Logger
@inject ICampaignRepository CampaignRepository

<PageTitle> My Campaigns </PageTitle>

<div>
    <div class="d-flex justify-content-between">
        <div><h3>My Campaigns</h3></div>
            
        <AuthorizeView>
            <Authorized>
                <div>
                    <a class="btn btn-primary" href="/campaigns/new"> <i class="fa-solid fa-plus pe-2"></i> Create Campaign </a>
                </div>
            </Authorized>
        </AuthorizeView>
    </div>
    
    @if (campaigns == null)
    {
        <LoadingSpinner />
    }
    else
    {
        @if(campaigns.Count == 0)
        {
            <div class="d-flex justify-content-center align-items-center">
                <p class="text-secondary">You have no campaigns</p>
            </div>

        }
        else
        {
            <div class="row mt-3">
                @foreach (var campaign in campaigns)
                {
                    <div class="col-lg-4 col-sm-10 pb-3">
                        <div class="card" style="width: 18rem;">
                            <div class="card-body">
                                <h5 class="card-title">@campaign.name</h5>
                                <h6 class="card-subtitle mb-2 text-muted">@campaign.created_by</h6>
                                <p class="card-text">@campaign.description.Truncate(100)</p>
                                <a href="campaign/@campaign.id" class="btn btn-primary">View</a>
                                <a href="campaign/@campaign.id/edit" class="btn btn-secondary">Edit</a>
                            </div>  
                        </div>
                    </div>  
                }
            </div>
        }
    }

</div>


@code {

    private List<campaign>? campaigns;

    protected override async Task OnInitializedAsync() {

        var ownerId = await UsernameRetriever.Identity;

        if (ownerId == null)
        {
            Logger.LogError("User id came back as null");
            throw new ApplicationException("User id came back as null");
        }

        campaigns = await CampaignRepository.GetCampaignsByUserId(ownerId);
    }
}
