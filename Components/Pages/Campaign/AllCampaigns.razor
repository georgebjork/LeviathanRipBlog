@rendermode InteractiveServer
@page "/campaigns/all"
@using LeviathanRipBlog.Data.Repositories
@using Humanizer
@using LeviathanRipBlog.Data
@using LeviathanRipBlog.Data.Models
@using LeviathanRipBlog.Settings
@using Microsoft.AspNetCore.Identity

@inject ILogger<AllCampaigns> Logger
@inject ICampaignRepository CampaignRepository

<div>
    <div class="d-flex justify-content-between">
        <div><h3>Campaigns</h3></div>
        
        <AuthorizeView>
            <Authorized>
                <div>
                    <a class="btn btn-primary" href="/campaigns/new"> <i class="fa-solid fa-plus pe-2"></i> Create Campaign </a>
                </div>
            </Authorized>
        </AuthorizeView>
    </div>
    
        @if (campaigns == null)
        {
            <LoadingSpinner/>
        }
        else
        {
            @if (campaigns.Count == 0)
            {
                <div class="d-flex flex-column align-items-center">
                    <div>
                        <p class="text-secondary">There are no campaigns yet.</p>
                    </div>
                    <AuthorizeView>
                        <Authorized>
                            <div>
                                <a class="btn btn-primary" href="/campaigns/new"> <i class="fa-solid fa-plus pe-2"></i> Create Campaign </a>
                            </div>
                        </Authorized>
                    </AuthorizeView>
                </div>


            }
            else
            {
                <div class="row mt-3">
                    @foreach (var campaign in campaigns)
                    {
                        <div class="col-lg-4 col-sm-10 pb-3">
                            <div class="card" style="width: 18rem;">
                                <div class="card-body">
                                    <h5 class="card-title">@campaign.name</h5>
                                    <h6 class="card-subtitle mb-2 text-muted">@campaign.created_by</h6>
                                    <p class="card-text">@campaign.description.Truncate(100)</p>
                                    <a href="campaign/@campaign.id" class="btn btn-primary">View</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        }

</div>


@code {
    private List<campaign>? campaigns;

    protected override async Task OnInitializedAsync() {
        campaigns = await CampaignRepository.GetCampaigns();
    }
}