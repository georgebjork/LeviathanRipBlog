@rendermode InteractiveServer
@page "/campaigns/new"
@using LeviathanRipBlog.Components.Pages.Campaign.Models
@using LeviathanRipBlog.Data.Repositories

@inject ILogger<CreateCampaign> _logger
@inject ICampaignRepository _campaign_repository

<EditForm method="post" Model="Model" OnValidSubmit="Submit"  FormName="campaign-form">
    <AntiforgeryToken />

    <DataAnnotationsValidator />
    <ValidationSummary />
    
    <div class="pb-5">
        <label for="name">Campaign Name:</label>
        <InputText id="name" @bind-Value="Model!.Name" class="form-control"></InputText>
    </div>
    
    <div class="pb-5">
        <label for="description">A brief description of the campaign:</label>
        <InputTextArea id="description" @bind-Value="Model!.Description" class="form-control"></InputTextArea>
    </div>
    
    <div class="d-grid gap-2">
        <button type="submit" class="btn btn-primary">Create</button>
    </div>
    
</EditForm>


@code {
    [SupplyParameterFromForm]
    public CampaignFormModel? Model { get; set; } = new();

    protected override async Task OnInitializedAsync() {
        Model!.Username = await UsernameRetriever.Username;   
        Model!.OwnerId = (await UsernameRetriever.Identity)!;
    }

    private async Task Submit()
    {
        var campaign = Model!.ToNewCampaign(Model);

        try
        {
            var rv = await _campaign_repository.Insert(campaign);
            if(rv <= -1) throw new Exception("Failed to insert campaign");
            NavigationManager.NavigateTo("/campaigns");
        }
        catch (Exception e)
        {
            _logger.LogError(e, "Failed to insert campaign");
        }
    }
}
